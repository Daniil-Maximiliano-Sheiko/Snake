
import pygame
import random

# –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞
SCREEN_WIDTH = 640
SCREEN_HEIGHT = 480

# –†–∞–∑–º–µ—Ä –∫–ª–µ—Ç–∫–∏ —Å–µ—Ç–∫–∏
GRID_SIZE = 20

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–µ—Ç–æ–∫ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
GRID_WIDTH = SCREEN_WIDTH // GRID_SIZE
GRID_HEIGHT = SCREEN_HEIGHT // GRID_SIZE

# –¶–≤–µ—Ç–∞
BOARD_BACKGROUND_COLOR = (0, 0, 0)
APPLE_COLOR = (255, 0, 0)
SNAKE_COLOR = (0, 255, 0)

# –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –∑–º–µ–π–∫–∏
UP = (0, -1)
DOWN = (0, 1)
LEFT = (-1, 0)
RIGHT = (1, 0)


class GameObject:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤."""

    def __init__(self, position=(SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2),
                 body_color=(255, 255, 255)):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤."""
        self.position = position
        self.body_color = body_color

    def draw(self, surface):
        """–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö)."""
        pass


class Apple(GameObject):
    """–ö–ª–∞—Å—Å —è–±–ª–æ–∫–∞."""

    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–±–ª–æ–∫–∞ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π –ø–æ–∑–∏—Ü–∏–µ–π."""
        super().__init__(body_color=APPLE_COLOR)
        self.randomize_position()

    def randomize_position(self):
        """–ó–∞–¥–∞—ë—Ç —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —è–±–ª–æ–∫—É –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ø–æ–ª—è."""
        self.position = (
            random.randint(0, GRID_WIDTH - 1) * GRID_SIZE,
            random.randint(0, GRID_HEIGHT - 1) * GRID_SIZE,
        )

    def draw(self, surface):
        """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ —è–±–ª–æ–∫–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ."""
        rect = pygame.Rect(self.position, (GRID_SIZE, GRID_SIZE))
        pygame.draw.rect(surface, self.body_color, rect)


class Snake(GameObject):
    """–ö–ª–∞—Å—Å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –∑–º–µ–π–∫—É."""

    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–º–µ–π–∫–∏."""
        super().__init__(body_color=SNAKE_COLOR)
        self.length = 1
        self.positions = [((SCREEN_WIDTH // 2), (SCREEN_HEIGHT // 2))]
        self.direction = RIGHT
        self.next_direction = None
        self.last = None

    def get_head_position(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ–ª–æ–≤—ã –∑–º–µ–π–∫–∏."""
        return self.positions[0]

    def update_direction(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –Ω–æ–≤–æ–µ."""
        if self.next_direction:
            # –∑–∞–ø—Ä–µ—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
            opposite = (-self.direction[0], -self.direction[1])
            if self.next_direction != opposite:
                self.direction = self.next_direction
            self.next_direction = None

    def move(self):
        """–ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –∑–º–µ–π–∫—É –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏."""
        cur_x, cur_y = self.get_head_position()
        dir_x, dir_y = self.direction
        new_pos = (
            (cur_x + (dir_x * GRID_SIZE)) % SCREEN_WIDTH,
            (cur_y + (dir_y * GRID_SIZE)) % SCREEN_HEIGHT,
        )

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å —Å–æ–±–æ–π
        if new_pos in self.positions[2:]:
            self.reset()
        else:
            self.positions.insert(0, new_pos)
            if len(self.positions) > self.length:
                self.last = self.positions.pop()

    def draw(self, surface):
        """–û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∑–º–µ–π–∫—É –∏ –æ—á–∏—â–∞–µ—Ç —Å–ª–µ–¥."""
        if self.last:
            rect = pygame.Rect(self.last, (GRID_SIZE, GRID_SIZE))
            pygame.draw.rect(surface, BOARD_BACKGROUND_COLOR, rect)
        for pos in self.positions:
            rect = pygame.Rect(pos, (GRID_SIZE, GRID_SIZE))
            pygame.draw.rect(surface, self.body_color, rect)

    def reset(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–º–µ–π–∫–∏ –¥–æ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ."""
        self.length = 1
        self.positions = [((SCREEN_WIDTH // 2), (SCREEN_HEIGHT // 2))]
        self.direction = random.choice([UP, DOWN, LEFT, RIGHT])
        self.next_direction = None
        self.last = None


def handle_keys(snake):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à –∏–≥—Ä–æ–∫–∞."""
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            exit()
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                snake.next_direction = UP
            elif event.key == pygame.K_DOWN:
                snake.next_direction = DOWN
            elif event.key == pygame.K_LEFT:
                snake.next_direction = LEFT
            elif event.key == pygame.K_RIGHT:
                snake.next_direction = RIGHT


def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∏–≥—Ä—ã."""
    pygame.init()
    screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
    pygame.display.set_caption('–ò–∑–≥–∏–± –ü–∏—Ç–æ–Ω–∞ üêç')

    clock = pygame.time.Clock()

    snake = Snake()
    apple = Apple()

    # –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞
    screen.fill(BOARD_BACKGROUND_COLOR)
    pygame.display.update()

    while True:
        handle_keys(snake)
        snake.update_direction()
        snake.move()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ ¬´—Å—ä–µ–¥–∞–Ω–∏—è¬ª —è–±–ª–æ–∫–∞
        if snake.get_head_position() == apple.position:
            snake.length += 1
            apple.randomize_position()

        snake.draw(screen)
        apple.draw(screen)
        pygame.display.update()

        clock.tick(20)  # —Å–∫–æ—Ä–æ—Å—Ç—å –∏–≥—Ä—ã


if __name__ == '__main__':
    main()
